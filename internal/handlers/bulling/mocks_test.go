// Code generated by MockGen. DO NOT EDIT.
// Source: contract.go

// Package bulling is a generated GoMock package.
package bulling

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockmessageGenerator is a mock of messageGenerator interface.
type MockmessageGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockmessageGeneratorMockRecorder
}

// MockmessageGeneratorMockRecorder is the mock recorder for MockmessageGenerator.
type MockmessageGeneratorMockRecorder struct {
	mock *MockmessageGenerator
}

// NewMockmessageGenerator creates a new mock instance.
func NewMockmessageGenerator(ctrl *gomock.Controller) *MockmessageGenerator {
	mock := &MockmessageGenerator{ctrl: ctrl}
	mock.recorder = &MockmessageGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockmessageGenerator) EXPECT() *MockmessageGeneratorMockRecorder {
	return m.recorder
}

// GetMessageText mocks base method.
func (m *MockmessageGenerator) GetMessageText() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMessageText")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetMessageText indicates an expected call of GetMessageText.
func (mr *MockmessageGeneratorMockRecorder) GetMessageText() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMessageText", reflect.TypeOf((*MockmessageGenerator)(nil).GetMessageText))
}
